@model EagleEye.Views.ParkingLot.ParkingLot
@{
	Layout = "~/Views/ParkingLot/_ParkingLot.cshtml";
}
@section Buttons {
<div class="panel panel-default">
	<div class="panel-heading flex-row justify-between">
		<span>Edit</span>
		<div class="btn btn-primary" onclick="viewer.save()">Save</div>
	</div>
	<div class="panel-body btn-group-vertical max-width">
		<div class="btn btn-default" onclick="updateBaseline()">Update Baseline</div>
		<label>Camera</label>
		@{Html.RenderAction("ListView", "Camera", new { cameraID = Model.CameraID });}
		<label>Annotations</label>
		<div class="btn btn-default" onclick="viewer.newSpace()">New Parking Space</div>
		<div class="btn btn-default" onclick="viewer.newAisle()">New Aisle</div>
		<div class="btn btn-default" onclick="viewer.newConstant()">New Constant</div>
	</div>
</div>

}
@section scripts {
	<script>
		let viewer = null;
		$.ajax({
			url: '/ParkingLot/Get',
			data: { id:@Model.ID}
		}).done(lot => {
			// Convert annotation points into Vector2 instances
			lot.Annotations.forEach(a => {
				let points = a.Points;
				a.Points = [];
				points.forEach(p => {
					a.Points.push(new Vector2(p.X, p.Y));
				})
			})

			viewer = new AnnotationEditor(lot, annotations);
			viewer.tick();
			// load the feed
			displayFeed();
		});
		function cameraSelected(cameraID) {
			viewer.lot.CameraID = cameraID;
			viewer.save();
		}
		function updateBaseline() {
			$.ajax({
				url: '/ParkingLot/UpdateBaseline',
				data: {id:viewer.lot.ID}
			}).done(data => {
				backgroundRadio.value = 'baseline';
				displayBaseline();
			});
		}
	</script>
}

